#!/bin/bash -e

SCRIPTS_DIR="$(readlink -f $(dirname $0)/../scripts)"
$IN_DOCKER || error "This script must be run in a Docker container"

. $SCRIPTS_DIR/utils.sh

# Source scripts
ddebug "Sourcing include scripts"
for script in architecture docker sbuild distcc distro debian-package \
    debian-pkg-repo
do
    ddebug "    Sourcing ${script}.sh"
    . $SCRIPTS_DIR/${script}.sh
done

# Init variables
. $SCRIPTS_DIR/base-config.sh

# Source distro, repo and package configs
distro_read_all_configs
repo_read_all_configs
package_read_all_configs

# Source optional config override file
if test -f $BASE_DIR/local-config.sh; then
    debug "    Sourcing local config"
    . $BASE_DIR/local-config.sh
fi

# Set up Docker container
docker_setup

usage() {
    test -z "$1" || msg "$1"
    msg "Usage:"
    msg "  $0 [ option ... ] distro[,distro...]"
    msg "  modes:"
    msg "     -i:            Init repo"
    msg "     -l:            List packages in repo"
    msg "     -r [args ...]: Run reprepro with args"
    msg "  general options:"
    msg "     -u UID:        Use user ID UID for non-root operations"
    msg "     -d:            Print verbose debug output"
    msg "     -dd:           Print extra verbose debug output"
    msg "  arguments (comma-separated):"
    msg "     distro[,...]:  Perform for distro(s)"
    msg "  example reprepro run:"
    msg "     $0 -r wheezy list wheezy"
    exit 1
}


# Process command line opts
declare -a ARG_LIST  # For saving modified command line opts
test -n "$DOCKER_UID" || DOCKER_UID=0
MODES=" "
RUN_AS_USER=false
while getopts ilru:Ud ARG; do
    ARG_LIST+=("-$ARG" ${OPTARG:+"$OPTARG"})
    case $ARG in
	i) MODES+="REPO_INIT " ;;
	l) MODES+="REPO_LIST " ;;
	r) MODES+="REPREPRO_RUN "; break ;;
	# general options
	u) DOCKER_UID=$OPTARG ;;
	U) RUN_AS_USER=true ;;
	d) $DEBUG && DDEBUG=true || DEBUG=true ;;
        *) usage
    esac
done
shift $((OPTIND-1))

# User
ARG_LIST+=(-u $DOCKER_UID)

# Save non-option args before mangling
ARG_LIST+=("$@")

modes || usage "No mode(s) specified"
ddebug "MODES = ${MODES}"

# Debug
! $DDEBUG || set -x

case "$MODES" in
    *\ REPO_INIT\ *)  # -i:  init repo
	run_user rm -f ${DISTRIBUTIONS}
	foreach_distro deb_repo_setup
	;;
    *\ REPO_LIST\ *)  # -l:  list contents of repos
	foreach_distro deb_repo_list
	;;
    *\ REPREPRO_RUN\ *)  # -r:  run reprepro
	foreach_distro deb_reprepro_run "$@"
	;;
esac
